select(loan_number, amount, payroll_proceed) %>%
mutate(
percent_payroll = (payroll_proceed/amount)*100
)  %>% arrange(percent_payroll, desc(amount))
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
total_row <- dutch_miller %>% summarise(total=sum(amount)) %>%
nrow(total_row)
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
summarise(total=sum(amount)) %>%
select(name, amount, forgiveness_amount) %>%
mutate(percent_loan = (percent_loan/amount)*100
) %>% arrange(percent_loan, desc(amount))
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
summarise(total=sum(amount)) %>%
select(name, amount, forgiveness_amount) %>%
mutate(percent_loan = (forgiveness_amount/amount)*100) %>%
arrange(percent_loan, desc(amount))
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
select(name, amount, forgiveness_amount) %>%
mutate(percent_loan = (forgiveness_amount/amount)*100)
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
select(name, amount, forgiveness_amount) %>%
mutate(percent_loan = (forgiveness_amount/amount)*100)
nrow(percent_loan)
View(dutch_miller)
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
select(name, amount, forgiveness_amount) %>%
mutate( percent_forgiven = (forgiveness_amount/amount)*100) %>%
arrange(percent_forgiven, desc(amount))
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
mutate (total_loans=summarise (total=sum(amount))) %>%
select(name, amount, forgiveness_amount) %>%
mutate( percent_forgiven = (forgiveness_amount/amount)*100) %>%
arrange(percent_forgiven, desc(amount)) %>%
summarise(total)
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
select(name, amount, forgiveness_amount) %>%
mutate( percent_forgiven = (forgiveness_amount/amount)*100) %>%
arrange(percent_forgiven, desc(amount)) %>%
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
select(name, amount, forgiveness_amount) %>%
mutate( percent_forgiven = (forgiveness_amount/amount)*100) %>%
arrange(percent_forgiven, desc(amount))
dutch_miller <- wv_ppp_loans %>%
select(amount, forgiveness_amount) %>%
summarise(total=sum(amount))
summarise(total=sum(forgiveness_amount))
dutch_miller <- wv_ppp_loans %>%
select(amount, forgiveness_amount) %>%
summarise(total=sum(amount))
summarise(total=sum(forgiveness_amount))
dutch_miller <- wv_ppp_loans %>%
select(amount, forgiveness_amount) %>%
summarise(total=sum(amount)) %>%
summarise(total=sum(forgiveness_amount))
dutch_miller <- wv_ppp_loans %>%
select(amount, forgiveness_amount) %>%
summarise(sum(amount)) %>%
summarise(sum(forgiveness_amount))
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
select(name, amount, forgiveness_amount) %>%
mutate( percent_forgiven = (forgiveness_amount/amount)*100) %>%
arrange(percent_forgiven, desc(amount))
# Hint
# First, create a dataframe that only has loans to those five companies
# Second, use that newly created dataframe to calculate total loan amount and percentage forgiven for those companies
dutch_miller <- wv_ppp_loans %>%
filter (str_detect(name, "DUTCH MILLER |DM MOTOR")) %>%
select(name, amount, forgiveness_amount) %>%
mutate( percent_forgiven = (forgiveness_amount/amount)*100) %>%
arrange(percent_forgiven, desc(amount))
View(dutch_miller)
setwd("~/Documents/GitHub/data_journalism_2022_spring/pre_labs/pre_lab_04")
knitr::opts_chunk$set(echo = TRUE)
# turn off sci notation
options(scipen=999)
library(tidyverse)
library(lubridate)
popestimate_2010 <- read_csv("data/popestimate_2010.csv")
popestimate_2015 <- read_csv("data/popestimate_2015.csv")
popestimate_2020 <- read_csv("data/popestimate_2020.csv")
# bind_rows with list
estimates <- bind_rows(list(popestimate_2010, popestimate_2015, popestimate_2020))
View(estimates)
maryland_ppp <- read_csv("data/ppp_applications_md.csv")
naics_codes <- read_csv('data/naics_codes.csv')
# with nrow included to match row total
maryland_ppp %>% left_join(naics_codes, by="naics_code") %>% select(name, naics_code, title) %>% nrow()
# without nrow
maryland_ppp %>% left_join(naics_codes) %>% select(name, naics_code, title)
maryland_ppp_with_naics <- maryland_ppp %>% left_join(naics_codes)
View(maryland_ppp_with_naics)
maryland_ppp_with_naics <- maryland_ppp %>% left_join(naics_codes)
# without nrow
maryland_ppp %>% left_join(naics_codes) %>% select(name, naics_code, title)
maryland_ppp_with_naics <- maryland_ppp %>% left_join(naics_codes, by "naics_code")
maryland_ppp_with_naics <- maryland_ppp %>% left_join(naics_codes, by="naics_code")
View(maryland_ppp_with_naics)
View(maryland_ppp_with_naics)
knitr::opts_chunk$set(echo = TRUE)
# turn off sci notation
options(scipen=999)
library(tidyverse)
library(lubridate)
popestimate_2010 <- read_csv("data/popestimate_2010.csv")
popestimate_2015 <- read_csv("data/popestimate_2015.csv")
popestimate_2020 <- read_csv("data/popestimate_2020.csv")
# bind_rows with list
estimates <- bind_rows(list(popestimate_2010, popestimate_2015, popestimate_2020))
View(estimates)
maryland_ppp <- read_csv("data/ppp_applications_md.csv")
naics_codes <- read_csv('data/naics_codes.csv')
# with nrow included to match row total
maryland_ppp %>% left_join(naics_codes, by="naics_code") %>% select(name, naics_code, title) %>% nrow()
# without nrow
maryland_ppp %>% left_join(naics_codes) %>% select(name, naics_code, title)
maryland_ppp_with_naics <- maryland_ppp %>% left_join(naics_codes, by="naics_code")
maryland_ppp_with_naics <- maryland_ppp %>% left_join(naics_codes, by="naics_code")
View(maryland_ppp_with_naics)
View(maryland_ppp_with_naics)
View(maryland_ppp_with_naics)
View(maryland_ppp_with_naics)
maryland_zcta <- read_csv('data/maryland_zcta.csv')
View(maryland_zcta)
# join on zip - but there's a problem
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip"="ZCTA5N"))
maryland_zcta <- maryland_zcta %>% mutate(across(ZCTA5N, as.character))
View(maryland_ppp_with_naics)
maryland_zcta <- maryland_zcta %>% mutate(across(ZCTA5N, as.character))
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip"="ZCTA5N"))
View(maryland_ppp_with_naics_and_demographics)
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip"="ZCTA5N"))
View(maryland_ppp_with_naics_and_demographics)
# make a zip5 column and redo the join
maryland_ppp_with_naics <- maryland_ppp_with_naics %>% mutate(zip5 = str_sub(zip, 1, 5))
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip5"="ZCTA5N"))
# make a zip5 column and redo the join
maryland_ppp_with_naics <- maryland_ppp_with_naics %>% mutate(zip5 = str_sub(zip, 1, 5))
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip5"="ZCTA5N"))
# zcta with > 50% non-Hispanic Black population
maryland_ppp_with_naics_and_demographics %>%
filter(PNHB > 50) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic Black population
maryland_ppp_with_naics_and_demographics %>%
filter(PNHB > 50) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic Black population
maryland_ppp_with_naics_and_demographics %>%
filter(PNHB > 50) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic white population
maryland_ppp_with_naics_and_demographics %>%
filter(PNHW > 50) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic Black population grouped by rural/urban
maryland_ppp_with_naics_and_demographics %>%
filter(PNHB > 50) %>%
group_by(rural_urban_indicator) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic white population grouped by rural/urban
maryland_ppp_with_naics_and_demographics %>%
filter(PNHW > 50) %>%
group_by(rural_urban_indicator) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
knitr::opts_chunk$set(echo = TRUE)
maryland_ppp_with_naics_and_demographics %>%
group_by(title) %>%
summarise(total=n()) %>%
filter (total == 1)
knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse.
library(tidyverse)
maryland_ppp <- read_rds("lab_04.rds")
maryland_ppp_with_naics_and_demographics %>%
group_by(title) %>%
summarise(total=n()) %>%
filter (total == 1)
View(maryland_ppp_with_naics_and_demographics)
knitr::opts_chunk$set(echo = TRUE)
fatal_police_shootings <- read_csv("data/fatal-police-shootings-data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
fatal_police_shootings <- read_csv("data/fatal-police-shootings-data.csv")
# Clean required data and prepare for analysis if needed.
View(fatal_police_shootings)
fatal_police_shootings %>% filter(gender=="F") %>%
summarise(total=n())
fatal_police_shootings %>% filter(gender=="F") %>%
sort_by(date)
fatal_police_shootings %>% filter(gender=="F") %>%
group_by(date)
fatal_police_shootings %>% filter(gender=="F") %>%
group_by(date) %>%
summarise(total=n())
fatal_police_shootings %>% filter(gender=="F") %>%
mutate(year = str_sub(date,1,2,3,4)) %>%
group_by(date) %>%
summarise(total=n())
fatal_police_shootings %>% filter(gender=="F") %>%
group_by(date) %>%
summarise(total=n())
knitr::opts_chunk$set(echo = TRUE)
install.packages("ggrepel")
library(tidyverse)
library(janitor)
library(lubridate)
library(ggrepel)
library(sf)
county_vaccinations_by_date <- read_csv("https://raw.githubusercontent.com/state-of-maryland/VaccineCSVs/master/MD_COVID19_TotalVaccinationsCountyFirstandSecondSingleDose.csv") %>%
clean_names()
View(county_vaccinations_by_date)
View(county_vaccinations_by_date)
county_vaccinations_by_date <- county_vaccinations_by_date %>%
mutate(vaccination_date = date(mdy_hms(vaccination_date)))
county_vaccinations_by_date <- county_vaccinations_by_date %>%
mutate(vaccination_date = date(mdy_hms(vaccination_date)))
county_totals <- county_vaccinations_by_date %>%
group_by(county) %>%
summarize(total = n())
View(county_totals)
county_vaccinations_by_date %>%
filter(is.na(county))
county_vaccinations_by_date <- county_vaccinations_by_date %>%
filter(!is.na(county))
county_vaccinations_by_date %>% arrange(desc(vaccination_date))
ranked <- county_vaccinations_by_date %>%
filter(county == "Prince George's") %>%
mutate(rank = min_rank(desc(fully_vaccinated))) %>%
arrange(desc(vaccination_date)) %>%
select(county, vaccination_date, fully_vaccinated, rank)
View(ranked)
latest_date <- ranked %>% slice(1)
one_week_ago <- ranked %>% filter(vaccination_date == latest_date$vaccination_date - 7)
latest_date <- latest_date %>%
mutate(pct_change_week = (fully_vaccinated - one_week_ago$fully_vaccinated)/one_week_ago$fully_vaccinated *100)
View(latest_date)
install.packages("ggrepel")
library(tidyverse)
library(janitor)
library(lubridate)
library(ggrepel)
library(sf)
install.packages("ggrepel")
county_vaccinations_by_date <- read_csv("https://raw.githubusercontent.com/state-of-maryland/VaccineCSVs/master/MD_COVID19_TotalVaccinationsCountyFirstandSecondSingleDose.csv") %>%
clean_names()
View(county_vaccinations_by_date)
county_vaccinations_by_date <- county_vaccinations_by_date %>%
mutate(vaccination_date = date(mdy_hms(vaccination_date)))
county_totals <- county_vaccinations_by_date %>%
group_by(county) %>%
summarize(total = n())
View(county_totals)
county_vaccinations_by_date %>%
filter(is.na(county))
county_vaccinations_by_date <- county_vaccinations_by_date %>%
filter(!is.na(county))
county_vaccinations_by_date %>% arrange(desc(vaccination_date))
ranked <- county_vaccinations_by_date %>%
filter(county == "Prince George's") %>%
mutate(rank = min_rank(desc(fully_vaccinated))) %>%
arrange(desc(vaccination_date)) %>%
select(county, vaccination_date, fully_vaccinated, rank)
View(ranked)
latest_date <- ranked %>% slice(1)
one_week_ago <- ranked %>% filter(vaccination_date == latest_date$vaccination_date - 7)
latest_date <- latest_date %>%
mutate(pct_change_week = (fully_vaccinated - one_week_ago$fully_vaccinated)/one_week_ago$fully_vaccinated *100)
View(latest_date)
View(one_week_ago)
ggplot() +
geom_bar(data=ranked, aes(x=vaccination_date, weight=fully_vaccinated))
ggplot() +
geom_bar(data=ranked, aes(x=vaccination_date, weight=fully_vaccinated)) +
geom_bar(data=latest_date, aes(x=vaccination_date, weight=fully_vaccinated), fill="red") +
geom_point(data=latest_date, aes(x=vaccination_date, y=fully_vaccinated)) +
geom_text_repel(data=latest_date, aes(x=vaccination_date, y=fully_vaccinated + 150, label="Latest date")) +
geom_smooth(data=ranked, aes(x=vaccination_date, y=fully_vaccinated), method=loess, se=FALSE) +
labs(title="Prince George's County Fully Vaccinated Tailing Off", x="Date", y="Fully Vaccinated") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 8),
plot.subtitle = element_text(size=10),
panel.grid.minor = element_blank()
)
changetext <- round(latest_date$pct_change_week[[1]], digits=2)
direction <- if_else(changetext > 0, "increased", "decreased")
sub <- paste("The number of people in Prince George's County who got fully vaccinated on ", format(latest_date$vaccination_date, format="%B %d"), " ", direction, " by ", changetext, " percent compared to the week before", sep="")
sub
ggplot() +
geom_bar(data=ranked, aes(x=vaccination_date, weight=fully_vaccinated)) +
geom_bar(data=latest_date, aes(x=vaccination_date, weight=fully_vaccinated), fill="red") +
geom_point(data=latest_date, aes(x=vaccination_date, y=fully_vaccinated)) +
geom_text_repel(data=latest_date, aes(x=vaccination_date, y=fully_vaccinated + 150, label="Latest date")) +
geom_smooth(data=ranked, aes(x=vaccination_date, y=fully_vaccinated), method=loess, se=FALSE) +
labs(title="Prince George's County Fully Vaccinated Tailing Off", subtitle=sub, x="Date", y="Fully Vaccinated") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 8),
plot.subtitle = element_text(size=10),
panel.grid.minor = element_blank()
)
census_data <- read_csv("data/census_incarceration.csv")
census_api_key("ab0ed8418e6554d3eb77ed342784e3bb0b002a64")#, install=TRUE)
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tigris)
library(lubridate)
census_data <- read_csv("data/census_incarceration.csv")
setwd("~/Documents/GitHub/data_analysis")
total_pop_20 <- census_data %>%
summarise(total_population_20)
total_pop_20 <- census_data
summarise(total_population_20)
View(total_pop_20)
library(tidyverse)
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tigris)
library(lubridate)
census_api_key("ab0ed8418e6554d3eb77ed342784e3bb0b002a64")#, install=TRUE)
total_pop_20 <- census_data
sum(total_population_20)
total_pop_20 <- census_data  %>%
sum(total_population_20)
census_data <- read_csv("census_incarceration.csv")
clean_counties <-census_data %>%
filter(state != "PR") %>%
filter(state != "AK")
total_pop_20 <- clean_counties  %>%
sum(total_population_20)
View(clean_counties)
clean_counties  %>%
sum(total_population_20)
clean_counties
sum(total_population_20)
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tigris)
library(lubridate)
census_api_key("ab0ed8418e6554d3eb77ed342784e3bb0b002a64")#, install=TRUE)
census_data <- read_csv("census_incarceration.csv")
clean_counties <-census_data %>%
filter(state != "PR") %>%
filter(state != "AK")
clean_counties
sum(total_population_20)
clean_counties %>%
sum(total_population_20)
clean_counties %>%
sum(total_population_20)
clean_counties %>%
sum(total_population_20)
clean_counties %>%
sum(total_population_20)
clean_counties %>%
group_by(total_population_20) %>%
summarise(total=n())
clean_counties %>%
group_by(total_population_20) %>%
sum(total=n())
clean_counties %>%
group_by(total_population_20) %>%
sum(total_population_20=n())
clean_counties %>%
summarise(sum(incarcerated_20))
incarcerated_pop_20 <- clean_counties %>%
summarise(sum(incarcerated_20))
View(incarcerated_pop_20)
incarcerated_pop_20 <- clean_counties %>%
mutate(rate_incarcerated= incarcerated_20/total_population_20*100)
summarise(sum(incarcerated_20))
incarcerated_pop_20 <- clean_counties %>%
mutate(rate_incarcerated= incarcerated_20/total_population_20*100)
View(incarcerated_pop_20)
incarcerated_pop_20 <- clean_counties %>%
summarise(sum(incarcerated_20))
incarcerated_pop_20 <- clean_counties %>%
summarise(sum(incarcerated_20))
incarcerated_pop_20 <- clean_counties %>%
summarise(
sum(incarcerated_20),
sum(total_population_20))
View(incarcerated_pop_20)
incarcerated_pop_20 <- clean_counties %>%
summarise(
sum(incarcerated_20),
sum(total_population_20)) %>%
mutate(rate_20 = sum(incarcerated_20)/sum(total_population_20)*100)
incarcerated_pop_20 <- clean_counties %>%
summarise(
sum(incarcerated_20),
sum(total_population_20)) %>%
mutate(rate_20 = sum(incarcerated_20)/sum(total_population_20)*100)
View(incarcerated_pop_20)
incarcerated_pop_20 <- clean_counties %>%
summarise(
sum(incarcerated_20),
sum(total_population_20)) %>%
mutate(rate_20 = 1962129/330628106 *100)
incarcerated_pop_10 <- clean_counties %>%
summarise(
sum(incarcerated_10),
sum(total_population_10)) %>%
mutate(rate_20 = 1962129/330628106 *100)
View(incarcerated_pop_10)
incarcerated_pop_10 <- clean_counties %>%
summarise(
sum(incarcerated_10),
sum(total_population_10)) %>%
mutate(rate_10 = 2259231/307959610 *100)
View(incarcerated_pop_10)
incarcerated_pop_00 <- clean_counties %>%
summarise(
sum(incarcerated_00),
sum(total_population_00)) %>%
mutate(rate_10 = 2259231/307959610 *100)
View(incarcerated_pop_00)
incarcerated_pop_00 <- clean_counties %>%
summarise(
sum(incarcerated_00),
sum(total_population_00)) %>%
mutate(rate_00 = 1972432/280771920 *100)
View(incarcerated_pop_10)
View(incarcerated_pop_10)
View(incarcerated_pop_20)
View(incarcerated_pop_00)
View(incarcerated_pop_20)
View(incarcerated_pop_00)
rates <- incarcerated_pop_00%>%
left_join(incarcerated_pop_10, by=c('rate_00' = 'rate_10'))
View(rates)
rates <- incarcerated_pop_00%>%
join(incarcerated_pop_10, by=c('rate_00' = 'rate_10'))
rates <- incarcerated_pop_00%>%
inner_join(incarcerated_pop_10, by=c('rate_00' = 'rate_10'))
View(rates)
rates <- rbind(incarcerated_pop_00, incarcerated_pop_10, incarcerated_pop_20)
rates <- merge(incarcerated_pop_00, incarcerated_pop_10, incarcerated_pop_20)
rates <- merge(incarcerated_pop_00, incarcerated_pop_10, incarcerated_pop_20, by = "sum(incarcerated_00")
rates <- cbind(incarcerated_pop_00, incarcerated_pop_10, incarcerated_pop_20)
View(rates)
View(rates)
