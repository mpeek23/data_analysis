# bind_rows with list
estimates <- bind_rows(list(popestimate_2010, popestimate_2015, popestimate_2020))
View(estimates)
maryland_ppp <- read_csv("data/ppp_applications_md.csv")
naics_codes <- read_csv('data/naics_codes.csv')
# with nrow included to match row total
maryland_ppp %>% left_join(naics_codes, by="naics_code") %>% select(name, naics_code, title) %>% nrow()
# without nrow
maryland_ppp %>% left_join(naics_codes) %>% select(name, naics_code, title)
maryland_ppp_with_naics <- maryland_ppp %>% left_join(naics_codes, by="naics_code")
maryland_ppp_with_naics <- maryland_ppp %>% left_join(naics_codes, by="naics_code")
View(maryland_ppp_with_naics)
View(maryland_ppp_with_naics)
View(maryland_ppp_with_naics)
View(maryland_ppp_with_naics)
maryland_zcta <- read_csv('data/maryland_zcta.csv')
View(maryland_zcta)
# join on zip - but there's a problem
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip"="ZCTA5N"))
maryland_zcta <- maryland_zcta %>% mutate(across(ZCTA5N, as.character))
View(maryland_ppp_with_naics)
maryland_zcta <- maryland_zcta %>% mutate(across(ZCTA5N, as.character))
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip"="ZCTA5N"))
View(maryland_ppp_with_naics_and_demographics)
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip"="ZCTA5N"))
View(maryland_ppp_with_naics_and_demographics)
# make a zip5 column and redo the join
maryland_ppp_with_naics <- maryland_ppp_with_naics %>% mutate(zip5 = str_sub(zip, 1, 5))
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip5"="ZCTA5N"))
# make a zip5 column and redo the join
maryland_ppp_with_naics <- maryland_ppp_with_naics %>% mutate(zip5 = str_sub(zip, 1, 5))
maryland_ppp_with_naics_and_demographics <- maryland_ppp_with_naics %>% left_join(maryland_zcta, by=c("zip5"="ZCTA5N"))
# zcta with > 50% non-Hispanic Black population
maryland_ppp_with_naics_and_demographics %>%
filter(PNHB > 50) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic Black population
maryland_ppp_with_naics_and_demographics %>%
filter(PNHB > 50) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic Black population
maryland_ppp_with_naics_and_demographics %>%
filter(PNHB > 50) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic white population
maryland_ppp_with_naics_and_demographics %>%
filter(PNHW > 50) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic Black population grouped by rural/urban
maryland_ppp_with_naics_and_demographics %>%
filter(PNHB > 50) %>%
group_by(rural_urban_indicator) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
# zcta with > 50% non-Hispanic white population grouped by rural/urban
maryland_ppp_with_naics_and_demographics %>%
filter(PNHW > 50) %>%
group_by(rural_urban_indicator) %>%
summarize(
count = n(),
avgamount = mean(amount),
medamount = median(amount))
knitr::opts_chunk$set(echo = TRUE)
maryland_ppp_with_naics_and_demographics %>%
group_by(title) %>%
summarise(total=n()) %>%
filter (total == 1)
knitr::opts_chunk$set(echo = TRUE)
# Turn off scientific notation
options(scipen=999)
# Load the tidyverse.
library(tidyverse)
maryland_ppp <- read_rds("lab_04.rds")
maryland_ppp_with_naics_and_demographics %>%
group_by(title) %>%
summarise(total=n()) %>%
filter (total == 1)
View(maryland_ppp_with_naics_and_demographics)
knitr::opts_chunk$set(echo = TRUE)
fatal_police_shootings <- read_csv("data/fatal-police-shootings-data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
fatal_police_shootings <- read_csv("data/fatal-police-shootings-data.csv")
# Clean required data and prepare for analysis if needed.
View(fatal_police_shootings)
fatal_police_shootings %>% filter(gender=="F") %>%
summarise(total=n())
fatal_police_shootings %>% filter(gender=="F") %>%
sort_by(date)
fatal_police_shootings %>% filter(gender=="F") %>%
group_by(date)
fatal_police_shootings %>% filter(gender=="F") %>%
group_by(date) %>%
summarise(total=n())
fatal_police_shootings %>% filter(gender=="F") %>%
mutate(year = str_sub(date,1,2,3,4)) %>%
group_by(date) %>%
summarise(total=n())
fatal_police_shootings %>% filter(gender=="F") %>%
group_by(date) %>%
summarise(total=n())
knitr::opts_chunk$set(echo = TRUE)
install.packages("ggrepel")
library(tidyverse)
library(janitor)
library(lubridate)
library(ggrepel)
library(sf)
county_vaccinations_by_date <- read_csv("https://raw.githubusercontent.com/state-of-maryland/VaccineCSVs/master/MD_COVID19_TotalVaccinationsCountyFirstandSecondSingleDose.csv") %>%
clean_names()
View(county_vaccinations_by_date)
View(county_vaccinations_by_date)
county_vaccinations_by_date <- county_vaccinations_by_date %>%
mutate(vaccination_date = date(mdy_hms(vaccination_date)))
county_vaccinations_by_date <- county_vaccinations_by_date %>%
mutate(vaccination_date = date(mdy_hms(vaccination_date)))
county_totals <- county_vaccinations_by_date %>%
group_by(county) %>%
summarize(total = n())
View(county_totals)
county_vaccinations_by_date %>%
filter(is.na(county))
county_vaccinations_by_date <- county_vaccinations_by_date %>%
filter(!is.na(county))
county_vaccinations_by_date %>% arrange(desc(vaccination_date))
ranked <- county_vaccinations_by_date %>%
filter(county == "Prince George's") %>%
mutate(rank = min_rank(desc(fully_vaccinated))) %>%
arrange(desc(vaccination_date)) %>%
select(county, vaccination_date, fully_vaccinated, rank)
View(ranked)
latest_date <- ranked %>% slice(1)
one_week_ago <- ranked %>% filter(vaccination_date == latest_date$vaccination_date - 7)
latest_date <- latest_date %>%
mutate(pct_change_week = (fully_vaccinated - one_week_ago$fully_vaccinated)/one_week_ago$fully_vaccinated *100)
View(latest_date)
install.packages("ggrepel")
library(tidyverse)
library(janitor)
library(lubridate)
library(ggrepel)
library(sf)
install.packages("ggrepel")
county_vaccinations_by_date <- read_csv("https://raw.githubusercontent.com/state-of-maryland/VaccineCSVs/master/MD_COVID19_TotalVaccinationsCountyFirstandSecondSingleDose.csv") %>%
clean_names()
View(county_vaccinations_by_date)
county_vaccinations_by_date <- county_vaccinations_by_date %>%
mutate(vaccination_date = date(mdy_hms(vaccination_date)))
county_totals <- county_vaccinations_by_date %>%
group_by(county) %>%
summarize(total = n())
View(county_totals)
county_vaccinations_by_date %>%
filter(is.na(county))
county_vaccinations_by_date <- county_vaccinations_by_date %>%
filter(!is.na(county))
county_vaccinations_by_date %>% arrange(desc(vaccination_date))
ranked <- county_vaccinations_by_date %>%
filter(county == "Prince George's") %>%
mutate(rank = min_rank(desc(fully_vaccinated))) %>%
arrange(desc(vaccination_date)) %>%
select(county, vaccination_date, fully_vaccinated, rank)
View(ranked)
latest_date <- ranked %>% slice(1)
one_week_ago <- ranked %>% filter(vaccination_date == latest_date$vaccination_date - 7)
latest_date <- latest_date %>%
mutate(pct_change_week = (fully_vaccinated - one_week_ago$fully_vaccinated)/one_week_ago$fully_vaccinated *100)
View(latest_date)
View(one_week_ago)
ggplot() +
geom_bar(data=ranked, aes(x=vaccination_date, weight=fully_vaccinated))
ggplot() +
geom_bar(data=ranked, aes(x=vaccination_date, weight=fully_vaccinated)) +
geom_bar(data=latest_date, aes(x=vaccination_date, weight=fully_vaccinated), fill="red") +
geom_point(data=latest_date, aes(x=vaccination_date, y=fully_vaccinated)) +
geom_text_repel(data=latest_date, aes(x=vaccination_date, y=fully_vaccinated + 150, label="Latest date")) +
geom_smooth(data=ranked, aes(x=vaccination_date, y=fully_vaccinated), method=loess, se=FALSE) +
labs(title="Prince George's County Fully Vaccinated Tailing Off", x="Date", y="Fully Vaccinated") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 8),
plot.subtitle = element_text(size=10),
panel.grid.minor = element_blank()
)
changetext <- round(latest_date$pct_change_week[[1]], digits=2)
direction <- if_else(changetext > 0, "increased", "decreased")
sub <- paste("The number of people in Prince George's County who got fully vaccinated on ", format(latest_date$vaccination_date, format="%B %d"), " ", direction, " by ", changetext, " percent compared to the week before", sep="")
sub
ggplot() +
geom_bar(data=ranked, aes(x=vaccination_date, weight=fully_vaccinated)) +
geom_bar(data=latest_date, aes(x=vaccination_date, weight=fully_vaccinated), fill="red") +
geom_point(data=latest_date, aes(x=vaccination_date, y=fully_vaccinated)) +
geom_text_repel(data=latest_date, aes(x=vaccination_date, y=fully_vaccinated + 150, label="Latest date")) +
geom_smooth(data=ranked, aes(x=vaccination_date, y=fully_vaccinated), method=loess, se=FALSE) +
labs(title="Prince George's County Fully Vaccinated Tailing Off", subtitle=sub, x="Date", y="Fully Vaccinated") +
theme_minimal() +
theme(
plot.title = element_text(size = 16, face = "bold"),
axis.title = element_text(size = 8),
plot.subtitle = element_text(size=10),
panel.grid.minor = element_blank()
)
census_data <- read_csv("data/census_incarceration.csv")
census_api_key("ab0ed8418e6554d3eb77ed342784e3bb0b002a64")#, install=TRUE)
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tigris)
library(lubridate)
census_data <- read_csv("data/census_incarceration.csv")
knitr::opts_chunk$set(echo = TRUE)
clean_vax_data <- vax_data %>%
filter(!is.na(FullyVaccinated)) %>%
filter(str_length(ZIP_CODE)== 5)
knitr::opts_chunk$set(echo = TRUE)
# install.packages('corrr')
library(janitor)
library(tidyverse)
library(corrr)
reveal_data <- read_rds("data/reveal_data.rds")
reveal_data
reveal_data %>%
ggplot() +
geom_point(aes(x=pct_trump,y=businesses_receiving_ppe_pct)) +
geom_smooth(aes(x=pct_trump,y=businesses_receiving_ppe_pct), method="lm")
reveal_data %>%
ggplot() +
geom_point(aes(x=pct_trump,y=ppe_amount_per_employee)) +
geom_smooth(aes(x=pct_trump,y=ppe_amount_per_employee), method="lm")
cor.test(reveal_data$pct_trump, reveal_data$businesses_receiving_ppe_pct)
cor.test(reveal_data$pct_trump, reveal_data$ppe_amount_per_employee)
reveal_data %>%
group_by(vote_2016) %>%
summarise(
mean_ppp_amount_per_employee = mean(ppe_amount_per_employee),
mean_businesses_receiving_ppe_pct = mean(businesses_receiving_ppe_pct)
)
t.test(ppe_amount_per_employee ~ vote_2016, data = reveal_data)
t.test(businesses_receiving_ppe_pct ~ vote_2016, data = reveal_data)
View(census_data)
allcounty_rates <- allcounty_rates %>%
head(10)
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tigris)
library(lubridate)
census_api_key("ab0ed8418e6554d3eb77ed342784e3bb0b002a64")#, install=TRUE)
census_data <- read_csv("census_incarceration.csv")
clean_counties <-census_data %>%
filter(state != "PR", state != "AK")
rates <- clean_counties %>%
summarise(
state= "US",
rate_20 = sum(incarcerated_20)/sum(total_population_20)*100,
rate_10 = sum(incarcerated_10)/sum(total_population_10)*100,
rate_00 = sum(incarcerated_00)/sum(total_population_00)*100,
rank_20 = NA,
rank_10 = NA,
rank_00 = NA
)
allcounty_rates<-clean_counties %>%
mutate(rate_20=incarcerated_20/total_population_20*100,
rate_10=incarcerated_10/total_population_10*100,
rate_00=incarcerated_00/total_population_00*100) %>%
arrange(-rate_20) %>% select (state,county,rate_20:rate_00)
allcounty_rates <- allcounty_rates %>%
head(10)
allcounty_rates <- allcounty_rates %>%
head(10)
allcounty_rates_table <- allcounty_rates %>%
head(10)
View(allcounty_rates_table)
View(allcounty_rates_table)
View(clean_counties)
setwd("~/Documents/GitHub/data_analysis")
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tigris)
library(lubridate)
census_api_key("ab0ed8418e6554d3eb77ed342784e3bb0b002a64")#, install=TRUE)
census_data <- read_csv("census_incarceration.csv")
clean_counties <-census_data %>%
filter(state != "PR", state != "AK")
rates <- clean_counties %>%
summarise(
state= "US",
rate_20 = sum(incarcerated_20)/sum(total_population_20)*100,
rate_10 = sum(incarcerated_10)/sum(total_population_10)*100,
rate_00 = sum(incarcerated_00)/sum(total_population_00)*100,
rank_20 = NA,
rank_10 = NA,
rank_00 = NA
)
allcounty_rates_table <- allcounty_rates %>%
head(10)
allcounty_rates_table <- allcounty_rates %>%
head(10)
allcounty_rates<-clean_counties %>%
mutate(rate_20=incarcerated_20/total_population_20*100,
rate_10=incarcerated_10/total_population_10*100,
rate_00=incarcerated_00/total_population_00*100) %>%
arrange(-rate_20) %>% select (state,county,rate_20:rate_00)
allcounty_rates_table <- allcounty_rates %>%
head(10)
View(allcounty_rates_table)
View(clean_counties)
setwd("~/Documents/GitHub/data_analysis")
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tigris)
library(lubridate)
census_api_key("ab0ed8418e6554d3eb77ed342784e3bb0b002a64")#, install=TRUE)
census_data <- read_csv("census_incarceration.csv")
census_data <- read_csv("census_incarceration.csv")
setwd("~/Documents/GitHub/data_analysis")
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tigris)
library(lubridate)
census_api_key("ab0ed8418e6554d3eb77ed342784e3bb0b002a64")#, install=TRUE)
census_data <- read_csv("data/census_incarceration.csv")
clean_counties <-census_data %>%
filter(state != "PR", state != "AK")
write_csv(clean_counties, "data/clean_counties.csv")
rates <- clean_counties %>%
summarise(
state= "US",
rate_20 = sum(incarcerated_20)/sum(total_population_20)*100,
rate_10 = sum(incarcerated_10)/sum(total_population_10)*100,
rate_00 = sum(incarcerated_00)/sum(total_population_00)*100,
rank_20 = NA,
rank_10 = NA,
rank_00 = NA
)
wv_zoom<-clean_counties %>%
filter(state=="WV") %>%
mutate(
rate_20 = (incarcerated_20)/(total_population_20)*100,
rate_10 = (incarcerated_10)/(total_population_10)*100,
rate_00 = (incarcerated_00)/(total_population_00)*100)
wv_zoom %>% pivot_longer(starts_with("inc"),values_to = "cnt",names_to = "year") %>% select(state,county,year,cnt)
wv_zoom %>% filter(incarcerated_20==0 | incarcerated_10==0 | incarcerated_00==0)
##  count(incarcerated_pop_00==0, incarcerated_pop_10==0, incarcerated_pop_20 == 0)
state_rates <-clean_counties %>%
group_by(state) %>%
summarise(
rate_20 = sum(incarcerated_20)/sum(total_population_20)*100,
rate_10 = sum(incarcerated_10)/sum(total_population_10)*100,
rate_00 = sum(incarcerated_00)/sum(total_population_00)*100) %>%
mutate(
rank_20 = min_rank(-rate_20),
rank_10 = min_rank(-rate_10),
rank_00 = min_rank(-rate_00)) %>%
bind_rows(rates) %>%
arrange(desc(rate_20))
state_rates %>%
ggplot(aes(rate_20))+ geom_histogram(bins = 20)+geom_vline(xintercept = rates$rate_20) +
geom_label(aes(y=8,label=state))
counties_with_zero<-clean_counties %>%
arrange(incarcerated_20 + incarcerated_10 + incarcerated_20)
allcounty_rates<-clean_counties %>%
mutate(rate_20=incarcerated_20/total_population_20*100,
rate_10=incarcerated_10/total_population_10*100,
rate_00=incarcerated_00/total_population_00*100) %>%
arrange(-rate_20) %>% select (state,county,rate_20:rate_00)
allcounty_rates_table <- allcounty_rates %>%
head(5)
prison_pop <- census_data
prison_pop <- prison_pop %>% mutate(FIPS=str_pad(FIPS,5,"left","0"),ST_FIPS=substr(FIPS,1,2),COUNTY_FIPS=substr(FIPS,3,6)) %>%
group_by(state,ST_FIPS) %>% summarise(across(total_population_20:incarcerated_00,~sum(.x))) %>%
mutate(percent_00=100*incarcerated_00/total_population_00,
percent_10=100*incarcerated_10/total_population_10,
percent_20=100*incarcerated_20/total_population_20
) %>% ungroup()
# join with the state data...
bad_states=c("Alaska","Commonwealth of the Northern Mariana Islands","United States Virgin Islands" ,"Guam","American Samoa","Puerto Rico","Hawaii")
states <- states() %>% filter(!NAME %in% bad_states)
states <- states %>% inner_join(prison_pop,by=c("STATEFP" = "ST_FIPS"))
## plot
total_20 <- ggplot() + geom_sf(aes(fill=incarcerated_20),data = states) + theme_minimal()
total_10 <- ggplot() + geom_sf(aes(fill=incarcerated_10),data = states) + theme_minimal()
total_00 <- ggplot() + geom_sf(aes(fill=incarcerated_00),data = states) + theme_minimal()
percent_20 <- ggplot() + geom_sf(aes(fill=percent_20),data = states) + theme_minimal()
percent_10 <- ggplot() + geom_sf(aes(fill=percent_10),data = states) + theme_minimal()
percent_00 <- ggplot() + geom_sf(aes(fill=percent_00),data = states) + theme_minimal()
system.time(ggsave(filename = "percent00.pdf",percent_00,width = 10,height = 7,dpi=300,units = "in"))
system.time(ggsave(filename = "percent10.pdf",percent_10,width = 10,height = 7,dpi=300,units = "in"))
system.time(ggsave(filename = "percent20.pdf",percent_20,width = 10,height = 7,dpi=300,units = "in"))
system.time(ggsave(filename = "total_00.pdf",total_00,width = 10,height = 7,dpi=300,units = "in"))
system.time(ggsave(filename = "total_10.pdf",total_10,width = 10,height = 7,dpi=300,units = "in"))
system.time(ggsave(filename = "total_20.pdf",total_20,width = 10,height = 7,dpi=300,units = "in"))
rank_change <-states %>%
mutate(twenty_year= percent_20-percent_00)
rank_map<- ggplot() + geom_sf(aes(fill=twenty_year),data = rank_change) + theme_minimal()
system.time(ggsave(filename = "rank_map.pdf",rank_map, width = 10,height = 7,dpi=300,units = "in"))
bad_states2=c("AK","VI","GU" ,"AS","PR","HI","MP")
prison_geometry <- st_read("Prison_Boundaries/Prison_Boundaries.shp") %>% filter(!STATE %in% bad_states2,!is.na(STATE))
prison <- ggplot() + geom_sf(data = prison_geometry) + theme_minimal()
STFP <- states %>% filter(!state %in% bad_states2) %>% select(STATEFP,state) %>% pull(name=state,STATEFP) %>% enframe
county = counties() %>% left_join(STFP,by=c("STATEFP"="value")) %>% filter(!is.na(name))
#prison2 <- ggplot() + geom_sf(data = prison_geometry) + geom_sf(data = county) + theme_minimal()
prison2 <- ggplot()+ geom_sf(data = county) + geom_sf(data = prison_geometry,color="red")  + theme_minimal()
ggsave("prison2.pdf",prison2,width = 10,height = 7,dpi=300,units = "in")
graph_over_time<-census_data %>%
pivot_longer(cols = starts_with("incarcerated"), names_to = "year", values_to = "number") %>%
select(state, county, year, number) %>%
mutate(sc=paste0(state,county)) %>%
ggplot()+
geom_point(aes(x=year, y=number))+
geom_line(aes(x=year, y=number, group=sc))
hist_over_time<-census_data %>%
pivot_longer(cols = starts_with("incarcerated"), names_to = "year", values_to = "number") %>%
select(state, county, year, number) %>% filter(number<6000) %>%
ggplot(aes(x=number)) + facet_wrap(vars(year),ncol = 2) +
geom_histogram(binwidth = 100) +ylab("# of counties") + xlab("number of people incarcerated")
hist_over_time
View(states)
View(state_rates)
View(total_00)
state_rates %>%
mutate(
change_in_rate = (rate_20)-(rate_10)
)
state_rates %>%
mutate(
change_in_rate = (rank_20)-(rank_10)
)
state_rates %>%
mutate(
change_in_rank_20 = (rank_20)-(rank_00)
change_in_rank_10 = (rank_20)-(rank_10)
state_rates %>%
mutate(
change_in_rank_20 = (rank_20)-(rank_00),
change_in_rank_10 = (rank_20)-(rank_10),
first_change_in_rank= (rank_10)-(rank_00)
)
state_rates %>%
mutate(
change_in_rank_20 = (rank_20)-(rank_00),
change_in_rank_10 = (rank_20)-(rank_10),
first_change_in_rank= (rank_10)-(rank_00)
) %>%
arrange(desc(change_in_rank_20))
state_rates <-clean_counties %>%
group_by(state) %>%
summarise(
rate_20 = sum(incarcerated_20)/sum(total_population_20)*100,
rate_10 = sum(incarcerated_10)/sum(total_population_10)*100,
rate_00 = sum(incarcerated_00)/sum(total_population_00)*100) %>%
mutate(
rank_20 = min_rank(-rate_20),
rank_10 = min_rank(-rate_10),
rank_00 = min_rank(-rate_00)) %>%
bind_rows(rates) %>%
arrange(desc(rate_20))
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tidyverse)
library(sf)
library(janitor)
install.packages(tidycensus)
library(tidycensus)
library(tidyverse)
library(sf)
library(janitor)
library(tidycensus)
library(tidyverse)
library(sf)
library(janitor)
install.packages(tidycensus)
library(tidycensus)
prison_pop <- census_data
prison_pop <- prison_pop %>% mutate(FIPS=str_pad(FIPS,5,"left","0"),ST_FIPS=substr(FIPS,1,2),COUNTY_FIPS=substr(FIPS,3,6)) %>%
group_by(state,ST_FIPS) %>% summarise(across(total_population_20:incarcerated_00,~sum(.x))) %>%
mutate(percent_00=100*incarcerated_00/total_population_00,
percent_10=100*incarcerated_10/total_population_10,
percent_20=100*incarcerated_20/total_population_20
) %>% ungroup()
# join with the state data...
bad_states=c("Alaska","Commonwealth of the Northern Mariana Islands","United States Virgin Islands" ,"Guam","American Samoa","Puerto Rico","Hawaii")
states <- states() %>% filter(!NAME %in% bad_states)
state_rates %>%
ggplot(aes(rate_20))+ geom_histogram(bins = 20)+geom_vline(xintercept = rates$rate_20) +
geom_label(aes(y=8,label=state))
